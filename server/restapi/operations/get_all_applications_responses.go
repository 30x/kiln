package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/30x/shipyard/server/models"
)

/*GetAllApplicationsOK The request was for a repository and applications exist within that repository

swagger:response getAllApplicationsOK
*/
type GetAllApplicationsOK struct {

	// In: body
	Payload []*models.Application `json:"body,omitempty"`
}

// NewGetAllApplicationsOK creates GetAllApplicationsOK with default headers values
func NewGetAllApplicationsOK() *GetAllApplicationsOK {
	return &GetAllApplicationsOK{}
}

// WithPayload adds the payload to the get all applications o k response
func (o *GetAllApplicationsOK) WithPayload(payload []*models.Application) *GetAllApplicationsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all applications o k response
func (o *GetAllApplicationsOK) SetPayload(payload []*models.Application) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllApplicationsOK) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(200)
	if err := producer.Produce(rw, o.Payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*GetAllApplicationsNotFound The request was for a repository that does not exist

swagger:response getAllApplicationsNotFound
*/
type GetAllApplicationsNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllApplicationsNotFound creates GetAllApplicationsNotFound with default headers values
func NewGetAllApplicationsNotFound() *GetAllApplicationsNotFound {
	return &GetAllApplicationsNotFound{}
}

// WithPayload adds the payload to the get all applications not found response
func (o *GetAllApplicationsNotFound) WithPayload(payload *models.Error) *GetAllApplicationsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all applications not found response
func (o *GetAllApplicationsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllApplicationsNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
