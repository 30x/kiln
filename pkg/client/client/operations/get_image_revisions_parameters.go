package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"

	strfmt "github.com/go-swagger/go-swagger/strfmt"
)

// NewGetImageRevisionsParams creates a new GetImageRevisionsParams object
// with the default values initialized.
func NewGetImageRevisionsParams() *GetImageRevisionsParams {
	var ()
	return &GetImageRevisionsParams{}
}

/*GetImageRevisionsParams contains all the parameters to send to the API endpoint
for the get image revisions operation typically these are written to a http.Request
*/
type GetImageRevisionsParams struct {

	/*Application
	  The Application name

	*/
	Application string
	/*Repository
	  The Docker repository name

	*/
	Repository string
}

// WithApplication adds the application to the get image revisions params
func (o *GetImageRevisionsParams) WithApplication(application string) *GetImageRevisionsParams {
	o.Application = application
	return o
}

// WithRepository adds the repository to the get image revisions params
func (o *GetImageRevisionsParams) WithRepository(repository string) *GetImageRevisionsParams {
	o.Repository = repository
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetImageRevisionsParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// path param application
	if err := r.SetPathParam("application", o.Application); err != nil {
		return err
	}

	// path param repository
	if err := r.SetPathParam("repository", o.Repository); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
