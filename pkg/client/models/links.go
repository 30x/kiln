package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
)

/*Links Object used to wrap resource links.

swagger:model Links
*/
type Links struct {

	/* Container for any number of named resource links.

	Required: true
	*/
	Links map[string]*LinksLinksAnon `json:"_links"`
}

// Validate validates this links
func (m *Links) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLinks(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Links) validateLinks(formats strfmt.Registry) error {

	if err := validate.Required("_links", "body", m.Links); err != nil {
		return err
	}

	return nil
}

/*LinksLinksAnon A resource link.

swagger:model LinksLinksAnon
*/
type LinksLinksAnon struct {

	/* The link to the resource.

	Required: true
	*/
	Href strfmt.URI `json:"href"`
}

// Validate validates this links links anon
func (m *LinksLinksAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHref(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LinksLinksAnon) validateHref(formats strfmt.Registry) error {

	if err := validate.Required("href", "body", strfmt.URI(m.Href)); err != nil {
		return err
	}

	return nil
}
