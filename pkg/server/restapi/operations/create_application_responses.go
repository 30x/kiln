package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-swagger/go-swagger/httpkit"

	"github.com/30x/shipyard/pkg/server/models"
)

/*CreateApplicationCreated The request was for a valid repo, application, and image.  The image was created

swagger:response createApplicationCreated
*/
type CreateApplicationCreated struct {

	// In: body
	Payload *models.Image `json:"body,omitempty"`
}

// NewCreateApplicationCreated creates CreateApplicationCreated with default headers values
func NewCreateApplicationCreated() *CreateApplicationCreated {
	return &CreateApplicationCreated{}
}

// WithPayload adds the payload to the create application created response
func (o *CreateApplicationCreated) WithPayload(payload *models.Image) *CreateApplicationCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create application created response
func (o *CreateApplicationCreated) SetPayload(payload *models.Image) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApplicationCreated) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateApplicationNotFound The repository and application does not exist

swagger:response createApplicationNotFound
*/
type CreateApplicationNotFound struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateApplicationNotFound creates CreateApplicationNotFound with default headers values
func NewCreateApplicationNotFound() *CreateApplicationNotFound {
	return &CreateApplicationNotFound{}
}

// WithPayload adds the payload to the create application not found response
func (o *CreateApplicationNotFound) WithPayload(payload *models.Error) *CreateApplicationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create application not found response
func (o *CreateApplicationNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApplicationNotFound) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateApplicationConflict Application and image already exists

swagger:response createApplicationConflict
*/
type CreateApplicationConflict struct {

	// In: body
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateApplicationConflict creates CreateApplicationConflict with default headers values
func NewCreateApplicationConflict() *CreateApplicationConflict {
	return &CreateApplicationConflict{}
}

// WithPayload adds the payload to the create application conflict response
func (o *CreateApplicationConflict) WithPayload(payload *models.Error) *CreateApplicationConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create application conflict response
func (o *CreateApplicationConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateApplicationConflict) WriteResponse(rw http.ResponseWriter, producer httpkit.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
