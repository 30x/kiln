{% set metrics_memory = "200Mi" -%}
{% set eventer_memory = "200Mi" -%}
{% set num_nodes = pillar.get('num_nodes', -1) -%}
{% if num_nodes >= 0 -%}
  {% set metrics_memory = (200 + num_nodes * 4)|string + "Mi" -%}
  {% set eventer_memory = (200 * 1024 + num_nodes * 500)|string + "Ki" -%}
{% endif -%}

apiVersion: v1
kind: ReplicationController
metadata:
  name: heapster-v1.0.0
  namespace: kube-system
  labels:
    k8s-app: heapster
    kubernetes.io/cluster-service: "true"
spec:
  replicas: 1
  selector:
    k8s-app: heapster
  template:
    metadata:
      labels:
        k8s-app: heapster
        kubernetes.io/cluster-service: "true"
    spec:
      containers:
        - image: gcr.io/google_containers/heapster:v1.0.0
          name: heapster
          resources:
            # keep request = limit to keep this container in guaranteed class
            limits:
              cpu: 100m
              memory: {{ metrics_memory }}
            requests:
              cpu: 100m
              memory: {{ metrics_memory }}
          command:
            - /heapster
            - --source=kubernetes.summary_api:''
            - --sink=influxdb:http://monitoring-influxdb:8086
            - --sink=gcm:?metrics=autoscaling
            - --metric_resolution=60s
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: true
        - image: gcr.io/google_containers/heapster:v1.0.0
          name: eventer
          resources:
            # keep request = limit to keep this container in guaranteed class
            limits:
              cpu: 100m
              memory: {{ eventer_memory }}
            requests:
              cpu: 100m
              memory: {{ eventer_memory }}
          command:
            - /eventer
            - --source=kubernetes:''
            - --sink=gcl
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: true
      volumes:
        - name: ssl-certs
          hostPath:
            path: "/etc/ssl/certs"
