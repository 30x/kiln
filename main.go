package main

import (
	"os"
	"strconv"

	"github.com/30x/shipyard/pkg/server"
	"github.com/30x/shipyard/pkg/shipyard"
)

// This file was generated by the swagger tool.
// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func main() {

	portString := os.Getenv("PORT")

	if portString == "" {
		shipyard.LogError.Fatal("You must specifiy the PORT environment variable")
	}

	port, err := strconv.Atoi(portString)

	if err != nil {
		shipyard.LogError.Fatal("You must specify a valid integer for the PORT value")
	}

	imageCreator, err := shipyard.NewImageCreatorFromEnv()

	//we should die here if we're unable to start
	if err != nil {
		shipyard.LogError.Fatalf("Unable to create image creator %s", err)
	}

	//TODO refactor this into it's own factory
	s3Region := os.Getenv("EC2_REGION")

	if s3Region == "" {
		shipyard.LogError.Fatalf("You must specify the EC2_REGION variable. An example value is 'us-east-1'")
	}

	s3BucketName := os.Getenv("EC2_BUCKET")

	if s3BucketName == "" {
		shipyard.LogError.Fatalf("You must specify the EC2_BUCKET variable. An example value is 'testbeeswaxbucket'")
	}

	podSpec, err := shipyard.NewEc2PodSpec(s3Region, s3BucketName)

	if err != nil {
		shipyard.LogError.Fatalf("Unable to create pod spec provider.  Error is %s", err)
	}

	server := server.NewServer(imageCreator, podSpec)

	if err := server.Start(port); err != nil {
		shipyard.LogError.Fatalln(err)
	}
}
