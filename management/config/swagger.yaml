---
swagger: '2.0'
info:
  version: 0.0.0
  title: The Shipyard API.
basePath: /api/v1
consumes:
  - application/json
  - multipart/form-data
produces:
  - application/json
paths:
  /shipyard/build/{org}/{env}/{app}:
    x-swagger-router-controller: build
    parameters:
      - $ref: '#/parameters/org'
      - $ref: '#/parameters/env'
      - $ref: '#/parameters/app'
    post:
      description: Create a new build
      operationId: createBuild
      parameters:
        - $ref: '#/parameters/buildSources'
      responses:
        200:
          description: The build was successfully created
          schema:
            $ref: '#/definitions/BuildResult'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/Error'
      tags:
        - build
  /shipyard/build/{org}/{env}/{app}/{version}:
    x-swagger-router-controller: build
    parameters:
      - $ref: '#/parameters/org'
      - $ref: '#/parameters/env'
      - $ref: '#/parameters/app'
      - $ref: '#/parameters/version'
    post:
      description: Recreate the build for the requested version
      operationId: reCreateBuild
      parameters:
        - $ref: '#/parameters/buildSources'
      responses:
        200:
          description: The build was successfully created
          schema:
            $ref: '#/definitions/BuildResult'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/Error'
      tags:
        - build
  /shipyard/deploy/{org}/{env}/{app}:
    x-swagger-router-controller: deploy
    parameters:
      - $ref: '#/parameters/org'
      - $ref: '#/parameters/env'
      - $ref: '#/parameters/app'
    post:
      description: Deploy the latest build
      operationId: deployLatestBuild
      responses:
        200:
          description: The latest build was successfully deployed
          schema:
            $ref: '#/definitions/DeployResult'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/Error'
      tags:
        - deploy
  /shipyard/deploy/{org}/{env}/{app}/{version}:
    x-swagger-router-controller: deploy
    parameters:
      - $ref: '#/parameters/org'
      - $ref: '#/parameters/env'
      - $ref: '#/parameters/app'
      - $ref: '#/parameters/version'
    post:
      description: Deploy a specific build version
      operationId: deployBuild
      responses:
        200:
          description: The build was successfully deployed
          schema:
            $ref: '#/definitions/DeployResult'
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/Error'
      tags:
        - deploy
definitions:
  BuildResult:
    type: object
    # This needs to be filled in by Todd.  Options:
    #   Return the same response that Docker's /build endpoint does
    #   Return a URL to a build result
    #   Return an object with both a URL to a build result and the current build result
  DeployResult:
    type: object
    # This needs to be filled out by Josh.  At a minimum we need the URL to the
    # deployed service.
  Error:
    type: object
    properties:
      message:
        type: string
      stack:
        type: array
        items:
          type: string
    required: ['message']
parameters:
  app:
    name: app
    in: path
    description: The application the build belongs to
    required: true
    type: string
  buildSources:
    name: sources
    in: formData
    description: The sources to use for the build
    required: true
    type: file
  env:
    name: env
    in: path
    description: The environment the build belongs to
    required: true
    type: string
  org:
    name: org
    in: path
    description: The organization the build belongs to
    required: true
    type: string
  version:
    name: version
    in: path
    description: The build version
    required: true
    type: string
tags:
  - name: build
    description: Build operations
  - name: deploy
    description: Deploy operation
